{"version":3,"sources":["../../../../OneDrive - Emirates Group/React-Development/react-interface/src/components/AddAppointments.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/components/SearchAppointments.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/components/ListAppointments.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/components/Footer.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/components/App.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/serviceWorker.js","../../../../OneDrive - Emirates Group/React-Development/react-interface/src/index.js"],"names":["AddAppointments","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","patientName","appointmentDate","aptTime","comments","handleChange","bind","assertThisInitialized","handleAdd","e","preventDefault","tempApt","axios","post","then","response","console","log","catch","error","props","addAppointment","setState","toggleForm","target","value","name","defineProperty","react_default","a","createElement","className","formDisplay","onClick","index_esm","id","noValidate","onSubmit","htmlFor","type","placeholder","onChange","rows","cols","Component","SearchAppointments","aria-label","searchApts","data-toggle","aria-haspopup","aria-expanded","orderBy","changeOrder","orderDir","href","role","ListAppointments","appointments","map","item","key","Footer","App","myAppointments","queryText","deleteAppointment","query","order","dir","apt","tempApts","unshift","without","_this2","fetch","json","result","apts","_this3","filterApps","sort","b","toLowerCase","filter","eachItem","includes","components_AddAppointments","components_SearchAppointments","components_ListAppointments","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f35ad56c.chunk.js","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { FaPlus } from 'react-icons/fa';\r\n\r\nimport axios from 'axios';\r\n\r\nclass AddAppointments extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      patientName: '',\r\n      appointmentDate: '',\r\n      aptTime: '',\r\n      comments: ''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleAdd = this.handleAdd.bind(this);\r\n  }\r\n\r\n  handleAdd(e) {\r\n    e.preventDefault();\r\n    let tempApt = {\r\n      patientName: this.state.patientName,\r\n      appointmentDate: this.state.appointmentDate + ' ' + this.state.aptTime,\r\n      comments: this.state.comments\r\n    };\r\n\r\n    axios.post('http://localhost:8090/outpatient', tempApt).then(function (response) {\r\n      console.log(response);\r\n    })\r\n    .catch(function (error) {\r\n      console.log(error);\r\n    });\r\n\r\n    this.props.addAppointment(tempApt);\r\n\r\n    this.setState({\r\n      patientName: '',\r\n      appointmentDate: '',\r\n      aptTime: '',\r\n      comments: ''\r\n    });\r\n    this.props.toggleForm();\r\n  }\r\n\r\n  handleChange(e) {\r\n    const target = e.target;\r\n    const value = target.value;\r\n    const name = target.name;\r\n\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={\r\n          'card textcenter mt-3 ' +\r\n          (this.props.formDisplay ? 'fadeIn' : 'add-appointment')\r\n        }\r\n      >\r\n        <div\r\n          className=\"apt-addheading card-header bg-primary text-white\"\r\n          onClick={this.props.toggleForm}\r\n        >\r\n          <FaPlus /> Add Appointment\r\n        </div>\r\n\r\n        <div className=\"card-body\">\r\n          <form id=\"aptForm\" noValidate onSubmit={this.handleAdd}>\r\n                    <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"patientName\"\r\n              >\r\n                Patient Name\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  name=\"patientName\"\r\n                  placeholder=\"Patient's Name\"\r\n                  value={this.state.patientName}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"appointmentDate\"\r\n              >\r\n                Date\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"date\"\r\n                  className=\"form-control\"\r\n                  name=\"appointmentDate\"\r\n                  id=\"appointmentDate\"\r\n                  value={this.state.appointmentDate}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n              <label\r\n                className=\"col-md-2 col-form-label text-md-right\"\r\n                htmlFor=\"aptTime\"\r\n              >\r\n                Time\r\n              </label>\r\n              <div className=\"col-md-4\">\r\n                <input\r\n                  type=\"time\"\r\n                  className=\"form-control\"\r\n                  name=\"aptTime\"\r\n                  id=\"aptTime\"\r\n                  value={this.state.aptTime}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row\">\r\n              <label className=\"col-md-2 text-md-right\" htmlFor=\"comments\">\r\n                Apt. Notes\r\n              </label>\r\n              <div className=\"col-md-10\">\r\n                <textarea\r\n                  className=\"form-control\"\r\n                  rows=\"4\"\r\n                  cols=\"50\"\r\n                  name=\"comments\"\r\n                  id=\"comments\"\r\n                  placeholder=\"Appointment Notes\"\r\n                  value={this.state.comments}\r\n                  onChange={this.handleChange}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-group form-row mb-0\">\r\n              <div className=\"offset-md-2 col-md-10\">\r\n                <button\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary d-block ml-auto\"\r\n                >\r\n                  Add Appointment\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddAppointments;","import React, { Component } from 'react';\r\n\r\nclass SearchAppointments extends Component {\r\n\r\n   \r\n  render() {\r\n    return (\r\n      <div className=\"search-appointments row justify-content-center my-4\">\r\n        <div className=\"col-md-6\">\r\n          <div className=\"input-group\">\r\n            <input\r\n              id=\"SearchApts\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              aria-label=\"Search Appointments\"\r\n              onChange={e=>this.props.searchApts(e.target.value)}\r\n            />\r\n            <div className=\"input-group-append\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary dropdown-toggle\"\r\n                data-toggle=\"dropdown\"\r\n                aria-haspopup=\"true\"\r\n                aria-expanded=\"false\"\r\n              >\r\n                Sort by: <span className=\"caret\" />\r\n              </button>\r\n\r\n              <div className=\"sort-menu dropdown-menu dropdown-menu-right\">\r\n                <button className={\r\n                  'sort-by dropdown-item'+\r\n                  (this.props.orderBy==='patientName'?'active':'')\r\n                } \r\n                onClick={e => this.props.changeOrder('patientName',this.props.orderDir)}\r\n                href=\"#\">\r\n                  Patient Name\r\n                </button>\r\n                <button className={\r\n                  'sort-by dropdown-item'+\r\n                  (this.props.orderBy==='appointmentDate'?'active':'')\r\n                } \r\n                onClick={e => this.props.changeOrder('appointmentDate',this.props.orderDir)}\r\n                href=\"#\">\r\n                  Date\r\n                </button>\r\n                <div role=\"separator\" className=\"dropdown-divider\" />\r\n                <button className={\r\n                  'sort-by dropdown-item'+\r\n                  (this.props.orderDir==='asc'?'active':'')\r\n                } \r\n                onClick={e => this.props.changeOrder(this.props.orderBy,'asc')}\r\n                href=\"#\">\r\n                  Asc\r\n                </button>\r\n                <button className={\r\n                  'sort-by dropdown-item'+\r\n                  (this.props.orderDir==='desc'?'active':'')\r\n                } \r\n                onClick={e => this.props.changeOrder(this.props.orderBy,'desc')}\r\n                href=\"#\">\r\n                  Desc\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SearchAppointments;","import React, { Component } from 'react';\r\nimport { FaTimes } from 'react-icons/fa';\r\nimport Moment from 'react-moment';\r\n\r\nclass ListAppointments extends Component {\r\n  render() {\r\n\r\n    return (\r\n             <table id=\"table\" className=\"table table-bordered table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                       <th>\r\n                            <div className=\"th-inner \">Patient Name</div>\r\n                            <div className=\"fht-cell\"></div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"th-inner \">Appointment Date</div>\r\n                            <div className=\"fht-cell\"></div>\r\n                        </th>\r\n                        <th>\r\n                            <div className=\"th-inner \">Comments</div>\r\n                            <div className=\"fht-cell\"></div>\r\n                        </th>\r\n                    </tr>\r\n                </thead>\r\n                {this.props.appointments.map(item => (\r\n                    <tbody key={item.id}>\r\n                    {/* To avoid Warning: Each child in a list should have a unique \"key\" prop.*/}\r\n                        <tr >\r\n                            <td >{item.patientName}</td>\r\n                            <td >{item.appointmentDate}</td>\r\n                            <td >{item.comments}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                ))\r\n                }\r\n            </table>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListAppointments;","import React from 'react';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer class=\" App-footer\">\r\n\r\n            All contents &copy; 2019\r\n        </footer>\r\n\r\n    );\r\n}\r\nexport default Footer;","import React, { Component } from 'react';\nimport '../css/App.css';\n\nimport AddAppointments from './AddAppointments';\nimport SearchAppointments from './SearchAppointments';\nimport ListAppointments from './ListAppointments';\nimport Footer from './Footer';\n\nimport { without } from 'lodash';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      myAppointments: [],\n      formDisplay: false,\n      orderBy :'patientName',\n      orderDir:'asc',\n      queryText:''\n    };\n    this.deleteAppointment = this.deleteAppointment.bind(this);\n    this.toggleForm = this.toggleForm.bind(this);\n    this.addAppointment = this.addAppointment.bind(this);\n    this.changeOrder = this.changeOrder.bind(this);\n    this.searchApts = this.searchApts.bind(this);\n  }\n\n  toggleForm() {\n    this.setState({\n      formDisplay: !this.state.formDisplay\n    });\n  }\n\n  searchApts(query) {\n    this.setState({ queryText: query });\n  }\n  changeOrder(order,  dir){\n  this.setState({\n    orderBy:order,\n    orderDir:dir\n  });\n  }\n  addAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n     tempApts.unshift(apt);\n    this.setState({\n      myAppointments: tempApts\n     });\n  }\n\n  deleteAppointment(apt) {\n    let tempApts = this.state.myAppointments;\n    tempApts = without(tempApts, apt);\n\n    this.setState({\n      myAppointments: tempApts\n    });\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:8090/outpatient/fetch')\n    .then(response => response.json())\n    .then(result => {\n      const apts = result.map(item => {\n        return item;\n      })\n      this.setState({\n        myAppointments: apts\n      });\n    });\n\n  }\n\n  render() {\n\n    let order;\n    let filterApps=this.state.myAppointments;\n    if(this.state.orderDir==='asc'){\n      order=1;\n    } else{\n      order=-1;\n    }\n   filterApps=filterApps.sort((a, b) => {\n      if (\n        a[this.state.orderBy].toLowerCase() <\n        b[this.state.orderBy].toLowerCase()\n      ) {\n        return -1 * order;\n      } else {\n        return 1 * order;\n      }\n    })\n    .filter(eachItem => {\n    return (\n      eachItem['patientName']\n      .toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n      eachItem['appointmentDate']\n      .toLowerCase().includes(this.state.queryText.toLowerCase()) ||\n      eachItem['comments']\n      .toLowerCase().includes(this.state.queryText.toLowerCase())\n    );\n    });\n\n    return (\n      <main className=\"page bg-white\" id=\"petratings\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-12 bg-white\">\n              <div className=\"container\">\n                <AddAppointments\n                  formDisplay={this.state.formDisplay}\n                  toggleForm={this.toggleForm}\n                  addAppointment={this.addAppointment}\n                />\n               <SearchAppointments\n                 orderBy={this.state.orderBy}\n                 orderDir={this.state.orderDir}\n                 changeOrder={this.changeOrder}\n                 searchApts={this.searchApts}\n               />\n                <ListAppointments\n                  appointments={filterApps}\n                  deleteAppointment={this.deleteAppointment}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n\n    {/*  <Footer/> */}\n      </main>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './css/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'jquery/dist/jquery.js';\nimport 'popper.js/dist/umd/popper.js';\nimport 'bootstrap/dist/js/bootstrap.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
